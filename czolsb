#! /usr/bin/env bash
#
# Filename: czolsb
# Author: Olivier Sirol <czo@free.fr>
# License: GPL-2.0 (http://www.gnu.org/copyleft)
# File Created: 22 April 2009
# Last Modified: Thursday 01 December 2022, 12:08
# $Id: czolsb,v 1.52 2022/12/01 11:08:38 czo Exp $
# Edit Time: 40:41:38
# Description:
#
#   /etc/czolsb > /etc/motd
#
#   the older czolsb, without lsb_release but with /etc/os-release
#   when it was necessary to give the ESA the well-defined version
#   centos_6.5-x86_64-czo_servup-20140410
#
#   On Linux copy this script to /etc and make a cron
#   /etc/cron.d/czo-motd-czolsb:
#   @reboot      root   /etc/czolsb > /etc/motd 2> /dev/null
#
#   TODO: redo in perl!
#
# Copyright: (C) 2009-2022 Olivier Sirol <czo@free.fr>

export LANG=C
export PATH=$PATH:/sbin

{ [ -x "$(command -v hostname)" ] && export HOSTNAME=$(hostname 2>/dev/null); } || export HOSTNAME=$(uname -n 2>/dev/null)
export HOSTNAME=$(echo "$HOSTNAME" | perl -pe 's/\..*//')

WELCOME=$(perl -e '$H="Welcome on " . $ENV{HOSTNAME}; print map { ( " " x ( ( 72 - length $_ ) / 2 ) ) . $_ } $H;')

CCNAME=$(uname -m)
CKNAME=$(uname -r)

OSN=$(uname)

case "$OSN" in
Linux | CYGWIN*)
    if [ "$OSN" = "Linux" ]; then
        if [ ! -x "$(command -v lsb_release)" ]; then
            if [ -f /etc/os-release ]; then
                # echo "-> found os-release"
                . /etc/os-release
            else
                # echo "-> nothing found"
                PRETTY_NAME="Unknown"
                ID="Unknown"
                VERSION_ID="Unknown"
            fi
        else
            # echo "-> found lsb_release"
            PRETTY_NAME=$(lsb_release -sd)
            ID=$(lsb_release -si)
            VERSION_ID=$(lsb_release -sr)
        fi

        # debian 10 : no more dot release cf /etc/debian_version
        if [ "$ID" = "debian" ] || [ "$ID" = "Debian" ] || [ "$ID" = "Raspbian" ]; then
            if [ $(echo "$VERSION_ID" | perl -pe 's/\..*//') -ge 10 ]; then
                # echo "-> found debian >= 10"
                if [ -f /etc/debian_version ]; then
                    PRETTY_NAME=$(echo "$PRETTY_NAME" | perl -pe "s/$VERSION_ID/$(cat /etc/debian_version)/")
                    VERSION_ID=$(cat /etc/debian_version)
                fi
            fi
        fi

    else
        PRETTY_NAME="Cygwin ($OSN)"
    fi

    CRELEASE=$(echo "${PRETTY_NAME}" | perl -pe 's/  */ /g' | perl -pe 's/"//g')

    CNBCORE=$(perl -e '@procn=grep(/^processor[\t ]*:/, qx"cat /proc/cpuinfo"); $procn=@procn; print $procn;')
    CCOREMODEL=$(perl -e '($A1,$A2,$A3,$A4)= (qx"cat /proc/cpuinfo" =~ /^((model name)|(cpu model))[\t ]*: (.*)/m); $A4=~s/  */ /g; print $A4;')
    CMEM=$(perl -e '($mem)= (qx"cat /proc/meminfo" =~ /^MemTotal:\s*(.*) kB/); $mem=$mem/1024/1024; printf("%.1fGB RAM",$mem);')
    CSWAP=$(perl -e '($mem)= (qx"cat /proc/meminfo" =~ /^SwapTotal:\s*(.*) kB/m); if ($mem eq 0) { printf("no swap"); } else { $mem=$mem/1024/1024; printf("%.1fGB SWAP",$mem); }')

    ;;

FreeBSD | OpenBSD | NetBSD | Darwin)
    # poorly tested
    ID=$OSN
    VERSION_ID=$(echo "${CKNAME}" | perl -pe 's/-.*//g')
    CRELEASE="$ID $VERSION_ID"
    CNBCORE=$(sysctl -n hw.ncpu)

    # FreeBSD | OpenBSD
    CCOREMODEL=$(sysctl -n hw.model)

    CMEM=$(perl -e '($mem)=qx"sysctl -n hw.physmem"; $mem=$mem/1024/1024/1024; printf("%.1fGB RAM",$mem);')
    CSWAP=$(perl -e '($mem)=(qx"swapctl -sk" =~ /^total:\s*(.*) .*/mi); if ($mem eq 0) { printf("no swap"); } else { $mem=$mem/1024/1024; printf("%.1fGB SWAP",$mem); }')

    if [ "$OSN" = "NetBSD" ]; then
        CCOREMODEL=$(sysctl -n machdep.cpu_brand)
    fi

    if [ "$OSN" = "Darwin" ]; then
        CCOREMODEL=$(sysctl -n machdep.cpu.brand_string)
        CMEM=$(perl -e '($mem)=qx"sysctl -n hw.memsize"; $mem=$mem/1024/1024/1024; printf("%.1fGB RAM",$mem);')
        CSWAP=$(perl -e '($mem)=(qx"sysctl -n vm.swapusage" =~ /^total = ([^M]*)M .*/mi); $mem=$mem/1; if ($mem eq 0) { printf("no swap"); } else { $mem=$mem/1024; printf("%.1fGB SWAP",$mem); }')
    fi

    ;;

SunOS)
    # poorly tested
    ID=$OSN
    VERSION_ID=$(echo "${CKNAME}" | perl -pe 's/-.*//g')
    CRELEASE="$ID $VERSION_ID"

    CNBCORE=$(kstat cpu_info | grep -w core_id | wc -l | perl -pe 's/^\s+//g')
    CCOREMODEL=$(perl -e '($cmd)=(qx"kstat -m cpu_info"  =~ /^\s+brand\s+(.*)/m); print($cmd);')

    #Memory size: 1024 Megabytes
    CMEM=$(perl -e '($mem)=(qx"prtconf"  =~ /^Memory size: ([0-9]+) Megabytes/m); $mem=$mem/1024; printf("%.1fGB RAM",$mem);')
    #total: 175380k bytes allocated + 33604k reserved = 208984k used, 1160364k available
    CSWAP=$(perl -e '($mem)=(qx"swap -s" =~ /^total:\s*.*, ([0-9]+)k available/mi); if ($mem eq 0) { printf("no swap"); } else { $mem=$mem/1024/1024; printf("%.1fGB SWAP",$mem); }')

    ;;

esac

CCOREMODEL=$(echo "${CCOREMODEL}" | perl -pe 's/\(TM\)|\(R\)//gi' | perl -pe 's/ +$//g')
if [ -f /etc/lsb-czo-updatedate ]; then
    DTAG=$(cat /etc/lsb-czo-updatedate | perl -pe 's/-//g')
    CTAG=$(echo "${ID}_${VERSION_ID}-$(uname -m)-czo-${DTAG}" | perl -pe 's/(.*)/\L\1/')
else
    CTAG='???'
fi

cat <<EOF
              ,,,
             (o o)
####=====oOO==(_)==OOO==============================================####

$WELCOME

 $CRELEASE, $CCNAME, $CKNAME
 $CNBCORE x $CCOREMODEL, $CMEM, $CSWAP
 Last update: $CTAG

####================================================================####

EOF
