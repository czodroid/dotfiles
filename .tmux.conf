# Filename: .tmux.conf
# Author: Olivier Sirol <czo@free.fr>
# License: GPL-2.0
# File Created: juin 2018
# Last Modified: samedi 03 octobre 2020, 15:25
# Edit Time: 27:59:41
# Description:
#              tmux version 3.0a
#              tmux configuration à la screen
#              tmux show -g | cat > ~/.tmux.conf1
#
# $Id: .tmux.conf,v 1.56 2020/10/03 13:55:49 czo Exp $

# ======================================
# General settings

set -g default-terminal "xterm-256color"
# termguicolors
set -ga terminal-overrides ",*256col*:Tc"

set -sg escape-time 0
# 20 lignes par sec pendant 5.2 jours
set -g history-limit 9111000
set -g buffer-limit 20
set -g repeat-time 300
set -g display-time 2000
set -g remain-on-exit off
set -g visual-activity on
set -g mouse on

#set -g visual-bell off
#set -g bell-action any
set -g visual-bell on
set -g bell-action other

set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on 

set -g aggressive-resize on
set -g mode-keys vi
set -g xterm-keys on

set -g automatic-rename off
set -g allow-rename off
set -g set-titles-string "#T"
set -g set-titles on

# ======================================
# Key bindings

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a
bind a send-prefix

bind C-a     last-window
bind Escape  copy-mode
bind PageUP  copy-mode

bind C-c     new-window -c "#{pane_current_path}"
bind C-n     next-window
bind C-p     previous-window
bind C-d     detach
bind C-v     paste-buffer
bind v       paste-buffer
bind C-k     confirm-before "kill-window"
bind k       confirm-before "kill-pane"
bind C-l     refresh-client \; display "refresh-client"
bind l       next-layout
#bind Space   next-layout
bind Space   choose-tree -GZw
bind C-Space choose-tree -GZs

bind C-g if -F '#{s/off//:visual-bell}' 'set visual-bell off; display "visual-bell OFF"' 'set visual-bell on; display "visual-bell on"' 
bind C-u if -F '#{s/off//:status}' 'set status off; display "status OFF"' 'set status on; display "status on"' 
bind C-q set synchronize-panes \; display "synchronize-panes #{?synchronize-panes,on,OFF}"
bind C-m set -g mouse \; display "mouse #{?mouse,on,OFF}"

bind @   choose-window 'join-pane -vs "%%"'
bind C-@ choose-window 'movew -as %%'

bind ²   choose-window 'join-pane -vs "%%"'
bind C-² choose-window 'movew -as %%'

bind S-Up    swap-pane -dU
bind S-Down  swap-pane -dD

bind r   source-file ~/.tmux.conf \; display "Config reloaded"
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

bind C-b set -gF status-right "#{@stathost}"
bind b   set -gF status-right "#{@statdate} #{@stathost}"

# ctrl-b " % z
bind é   split-window -h -c "#{pane_current_path}"
bind C-z resize-pane -Z

# Enable locking
#set -g   lock-command vlock
#set -g   lock-after-time 43200 # 12*60*60 seconds, 0 = never
#bind C-x lock-server
#bind x   lock-server

bind m new-session ssh root@ananas \; split-pane ssh root@pzw \; split-pane ssh root@pivid \; split-pane ssh root@lartha \; select-layout tiled

## copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
## copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
## copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# Bug tmux in neovim
bind -n Home send Escape "OH"
bind -n End  send Escape "OF"

# ======================================
# Appearence and status bar

## Setenv
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
run-shell 'tmux setenv -g HOSTNAME $( [ -n "$HOSTNAME" ] || { [ -x /bin/getprop ] && HOSTNAME=`getprop net.hostname` ;} || { [ -x /bin/hostname ] && HOSTNAME=`hostname -s` ;} || HOSTNAME=`uname -n` ; echo "$HOSTNAME" | sed "s/\..*//" )'
# works on macos with /bin/echo, so without builtin echo
run-shell 'tmux setenv -g HOST_HASH $( /bin/echo -n "JC$HOSTNAME" | cksum | cut -d" " -f1 )'
run-shell 'tmux setenv -g HOST_PROMPT_COLOR $(( ( ( $HOST_HASH + 1 ) % 6 ) + 1 ))'

## colors
# if tmux is not up to date, run screen!
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' 
set -g status-style fg=brightwhite,bg=brightblack;
set -g message-style fg=brightwhite,bg=red;
set -g mode-style fg=brightwhite,bg=red;
set -g pane-active-border-style fg=blue,bg=default;

## status bar
set -g status-position bottom
set -g status-justify left

set -g status-left '#[fg=brightmagenta][#S]#[default] '
set -g status-left-length 10

set -g window-status-current-format '#[fg=brightyellow]#I#[fg=white]:#[fg=brightwhite]#T#[fg=white]:#[fg=brightblue]#P#F#[default]'
#set -g window-status-format '#[fg=white]#I#[default]'
set -g window-status-format ''
set -g window-status-separator ''

set -g @statload '#[fg=cyan]#(cut -d " " -f 1-3 /proc/loadavg)'
set -g @statdate '#[fg=brightcyan]%a %d %b, %H:%M'
set -g @stathost '#[fg=black]#[bg=#{HOST_PROMPT_COLOR}] #h #[default]'
set -gF status-right "#{@statdate} #{@stathost}"
#mar. 21 mai, 19:09  bruichladdich
#0.14 0.17 0.17 sam. 05 sept., 12:41  bruichladdich
set -g status-right-length 60



