#             ,,,
#            (o o)
####=====oOO==(_)==OOo==============================================####
#
# Filename: .tmux.conf
# Author: Olivier Sirol <czo@free.fr>
# License: GPL-2.0 (http://www.gnu.org/copyleft)
# File Created: 18 June 2014
# Last Modified: Wednesday 09 October 2024, 18:59
# $Id: .tmux.conf,v 1.209 2024/10/09 16:59:37 czo Exp $
# Edit Time: 111:28:07
# Description:
#
#       tmux config file
#
#       For version 2.3, but really works in 3.3a
#       I did use screen for a long time, but tmux is so much better!
#       And use `picocom -c -e z -b 115200' as a serial communication
#       program instead of `screen'.
#       It was very difficult to write this file, especially for the
#       different versions of tmux, which are not backwards compatible
#       It also works on tmate...
#
#       tmux show -g
#       tmux lsk
#       reptyr (cf xpra)
#
# Copyright: (C) 2014-2024 Olivier Sirol <czo@free.fr>

##====================================================================##
## General settings

#set -g default-command bash

set -g default-terminal "xterm-256color"

# true-color, termguicolors
set -ga terminal-overrides ",*256col*:Tc"

set -sg escape-time 0
set -g  repeat-time 500
# 20 lines per sec. for 5.2 days
set -g history-limit 9111000
set -g buffer-limit 20
set -g display-time 2000
set -g display-panes-time 5000
set -g remain-on-exit off
set -g visual-activity on
set -g mouse on

#set -g visual-bell off
#set -g bell-action any
set -g visual-bell on
set -g bell-action other

set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g aggressive-resize on

set -g automatic-rename off
set -g allow-rename off

set -g xterm-keys on
set -g mode-keys vi
set -g status-keys vi

## to get man ssh-keygen with -
# set -g word-separators "!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~-"
set -g word-separators "!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~"

##====================================================================##
## Appearence and status bar

## tmux or tmate running ?
if '[ X#{tmate-server-host} = Xssh.tmate.io ]' 'set -g @czotmux tmate' 'set -g @czotmux tmux'
# display "#{@czotmux}"

## setenv: hash for colors, tmux must be defined, and tweak for tmate!
run-shell '#{@czotmux} setenv -g @HOST_PROMPT_COLOR $( printf "JC#h" | cksum | awk "{ print ((( \$1 + 1 ) % 6 ) + 9 ) }" )'
# display "#{@HOST_PROMPT_COLOR}"

## colors
## old tmux:
# set -g status-fg             brightwhite
# set -g status-bg             brightblack
# set -g message-fg            brightwhite
# set -g message-bg            red
# set -g mode-fg               brightwhite
# set -g mode-bg               red
# set -g pane-active-border-fg blue
# set -g pane-active-border-bg default

set -g status-style             fg=brightwhite,bg=brightblack
set -g message-style            fg=brightwhite,bg=red
set -g mode-style               fg=brightwhite,bg=red
set -g pane-active-border-style fg=blue,bg=default

## title
if '[ X#{tmate-server-host} != Xssh.tmate.io ]' 'set -g set-titles-string "#T - TMUX"' 'set -g set-titles-string "#T - TMATE"'
# set -g set-titles-string "#T - #{@czotmux}"
set -g set-titles on

## status bar
set -g status-position bottom
set -g status-justify left

set -g status-left '#[fg=brightyellow][#S]#[default] '
set -g status-left-length 10

set -g window-status-current-format '#[fg=brightblue]#I#[fg=white] #[fg=brightwhite]#T#[fg=white] #[fg=brightblue]{#P#F}#[default]'
set -g window-status-separator ' '
set -g window-status-format '#[fg=black]#I#[default]'

# tmux <= 2.3
set -g status-right  ' [#h]'
set -gF status-right ' [#h]'
# tmux > 2.3
set -g @statdate '#[fg=cyan]%a %d %b, %H:%M'
set -g @statload '#[fg=yellow]#(LC_ALL=C uptime 2>/dev/null | sed -e "s/.*: //" -e "s/,//g" 2>/dev/null)'
set -g @stathost '#[fg=black]#[bg=colour#{@HOST_PROMPT_COLOR}] #h #[default]'
set -gF status-right '  #{@statload} #{@stathost}'

# display "#{client_width}"
# tmux display-message -p "#{client_width}"
if '[ #{client_width} -gt 143 ]' 'set -gF status-right "  #{@statdate} #{@statload} #{@stathost}"'
if '[ #{client_width} -le 143 ]' 'set -gF status-right "  #{@statload} #{@stathost}"'
if '[ #{client_width} -le 100 ]' 'set -gF status-right "  #{@stathost}"'

#mar. 21 mai, 19:09  bruichladdich
#0.14 0.17 0.17 sam. 05 sept., 12:41  bruichladdich
set -g status-right-length 60

## no left and right for tmate
if '[ X#{tmate-server-host} = Xssh.tmate.io ]' 'set -g status-left "" ; set -g status-left-length 0 ; set -g status-right "" ; set -g status-right-length 0'

##====================================================================##
## Key bindings

# change prefix key to C-a, easier to type, same to "screen"
unbind        C-b
set -g prefix C-a

bind a      send-prefix

bind C-a    last-window
bind Escape copy-mode
bind PageUP copy-mode

# re-bind with pane_current_path
bind c      new-window -c "#{pane_current_path}"
bind C-c    new-window -c "#{pane_current_path}"
bind C-n    next-window
bind C-p    previous-window
bind C-d    detach

bind v      paste-buffer
bind C-v    paste-buffer

bind r      source-file ~/.tmux.conf \; display " Config reloaded"
bind C-r    source-file ~/.tmux.conf \; display " Config reloaded"
bind C-l    refresh-client \; display " refresh-client"

# re-bind " % z if someone else did remove them...
bind '"'    split-window -v -c "#{pane_current_path}"
bind '%'    split-window -h -c "#{pane_current_path}"
bind z      resize-pane -Z
# and new for french kbd
bind 'Ã©'    split-window -h -c "#{pane_current_path}"
# and new for us kbd
bind '|'    split-window -h -c "#{pane_current_path}"
# default's TMUX   - : Delete the most recently copied buffer of text.
bind '-'    split-window -v -c "#{pane_current_path}"
# default's TMUX C-z : Suspend the tmux client.
bind C-z    resize-pane -Z

# confirm-before "kill-pane"
bind k      kill-pane
bind C-k    kill-window

# delete history for pane, do it when is huge!
bind C-h    clear-history \; display " clear-history"

bind h      copy-mode -H \; set -gF @man '#{copy_cursor_word}' \; send-keys -X cancel \; run-shell '#{@czotmux} new-window "printf \"\033]0;%s\007\" \"man #{@man} (${USER}@${HOSTNAME})\" ; man #{@man}"'

# set -g @sr '11'
# display "#{@sr}"
bind b      if '#{s/00//:@sr}' 'set @sr '01'; set -gF status-right "  #{@statdate} #{@statload} #{@stathost}"' "if '#{s/01//:@sr}' 'set @sr '11'; set -gF status-right \"  #{@statload} #{@stathost}\"' 'set @sr '00'; set -gF status-right \"  #{@stathost}\"'"

bind C-b    if -F '#{s/off//:status}' 'set status off; display " status OFF"' 'set status on; display " status on"'
bind C-g    if -F '#{s/off//:visual-bell}' 'set visual-bell off; display " visual-bell OFF"' 'set visual-bell on; display " visual-bell on"'
bind C-q    set synchronize-panes \; display " synchronize-panes #{?synchronize-panes,on,OFF}"
bind C-m    set -g mouse \; display " mouse #{?mouse,on,OFF}"

# bind C-s    capture-pane -b tcb -J -S - \; save-buffer -b tcb "$HOME/tmux.log" \; delete-buffer -b tcb \; display " save-buffer in ~/tmux.log"
bind C-s    set -gF @savefilename 'tmuxlog-#{s|[\/ ]|_|:pane_title}_#{t/f/%Y-%m-%d_%Hh%M:window_activity}.log' \; capture-pane -b tcb -J -S - \; save-buffer -b tcb "$HOME/#{@savefilename}" \; delete-buffer -b tcb \; display " save-buffer in ~/#{@savefilename}"

bind @      choose-window 'join-pane -vs "%%"'
bind C-@    choose-window 'movew -as %%'

bind S-Up   swap-pane -U
bind S-Down swap-pane -D

# enable locking
#set -g      lock-command vlock
#set -g      lock-after-time 43200 # 12*60*60 seconds, 0 = never
#bind C-x    lock-server
#bind x      lock-server

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "#{@czotmux} save-buffer - | xsel -i -b"'
if -b 'command -v xsel > /dev/null 2>&1' 'bind C-y run -b "#{@czotmux} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "#{@czotmux} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "#{@czotmux} save-buffer - | pbcopy"'
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind C-y run -b "#{@czotmux} save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "#{@czotmux} save-buffer - | reattach-to-user-namespace pbcopy"'

# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "#{@czotmux} save-buffer - | clip.exe"'
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind C-y run -b "#{@czotmux} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "#{@czotmux} save-buffer - > /dev/clipboard"'

# bug tmux in neovim: use vim!
bind -n Home send Escape "OH"
bind -n End  send Escape "OF"

# dont use this, prefer "mouse OFF", or do it with your terminal SHIFT on Linux/Windows and OPTION on macOS
#bind -n DoubleClick1Pane select-pane \; copy-mode -H \; send-keys -MX select-word \; run-shell "sleep .5s" \; send-keys -X copy-pipe-and-cancel "xsel -i"

bind -T copy-mode-vi C-Up    send -X -N 40 page-up
bind -T copy-mode-vi C-Down  send -X -N 40 page-down

bind -T copy-mode-vi WheelUpPane   select-pane \; send-keys -X -N 1 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 1 scroll-down

##====================================================================##
## Command alias

# set -s command-alias[100] sshgp='\
#    new-session -s GP ssh root@magnet  ;\
#     split-window     ssh root@bksyn   ;\
#     split-window     ssh root@wavelet ;\
#     split-window     ssh root@geomag  ;\
#     select-layout tiled ;\
#     select-pane -t 1 ;\
#     '
set -s command-alias[101] sshczo='\
    new-window       ssh root@dalmore ;\
    split-window     ssh root@ananas  ;\
    split-window     ssh root@lartha  ;\
    select-layout main-horizontal ;\
    select-pane -t 1 ;\
    '

# M="debian12 debian11 debian10 debian9 debian8 debian7 debian6 debian5 debian4 ubuntu20 ubuntu18 ubuntu16 ubuntu14 ubuntu12 ubuntu10 ubuntu8 rocky9 rocky8 centos8 centos7 centos6 centos5 fedora33 fedora9 fedora5 fedora1 suse15 freebsd13 freebsd12 freebsd5 netbsd openbsd solaris10 opensolaris openindiana"
set -s command-alias[102] sshdeb='\
    new-window       ssh root@debian12 ;\
    split-window     ssh root@debian11 ;\
    split-window     ssh root@debian10 ;\
    split-window     ssh root@debian9  ;\
    split-window -fh ssh root@debian8  ;\
    split-window     ssh root@debian7  ;\
    split-window     ssh root@debian6  ;\
    split-window     ssh root@debian5  ;\
    split-window -fh ssh root@debian4  ;\
    select-layout tiled ;\
    select-pane -t 1 ;\
    '


set -s command-alias[103] sshcent='\
    new-window       ssh root@rocky9  ;\
    split-window     ssh root@rocky8  ;\
    split-window     ssh root@centos8 ;\
    split-window     ssh root@centos7 ;\
    split-window -fh ssh root@centos6 ;\
    split-window     ssh root@centos5 ;\
    select-layout tiled ;\
    select-pane -t 1 ;\
    '

# M="geoscopecenalt geoscope-cloud geoscopediffusion geoscopemeta geoscopepqlx9 geoscopersync geoscopeseiscomp4 geoscopeseiscomp6 geoscopevalidation geoscopevalidation2 geoscopevpn geoscopewiki geoscopelognes"
set -s command-alias[104] sshgsc='\
    new-window       ssh root@geoscopecenalt      ;\
    split-window     ssh root@geoscope-cloud      ;\
    split-window     ssh root@geoscopediffusion   ;\
    split-window -fh ssh root@geoscopemeta        ;\
    split-window     ssh root@geoscopepqlx9       ;\
    split-window     ssh root@geoscopersync       ;\
    split-window     ssh root@geoscopeseiscomp4   ;\
    split-window -fh ssh root@geoscopeseiscomp6   ;\
    split-window     ssh root@geoscopevalidation  ;\
    split-window     ssh root@geoscopevalidation2 ;\
    split-window     ssh root@geoscopevpn         ;\
    split-window -fh ssh root@geoscopewiki        ;\
    split-window     ssh root@geoscopelognes      ;\
    select-layout tiled                           ;\
    '

# M="geoscopecenalt geoscopediffusion geoscopemeta geoscopepqlx9 geoscopersync geoscopeseiscomp4 geoscopeseiscomp6 geoscopevalidation geoscopevalidation2 geoscopevpn geoscopelognes"
set -s command-alias[105] sshgscs='\
    new-window       ssh sysop@geoscopecenalt      -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopediffusion   -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopemeta        -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopepqlx9       -t "bash --rcfile .bashrc.czo" ;\
    split-window -fh ssh sysop@geoscopersync       -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopeseiscomp4   -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopeseiscomp6   -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopevalidation  -t "bash --rcfile .bashrc.czo" ;\
    split-window -fh ssh sysop@geoscopevalidation2 -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopevpn         -t "bash --rcfile .bashrc.czo" ;\
    split-window     ssh sysop@geoscopelognes      -t "bash --rcfile .bashrc.czo" ;\
    select-layout tiled ;\
    '

set -s command-alias[106] sshgscsc='\
    new-window       ssh sysop@geoscopecenalt      ;\
    split-window     ssh sysop@geoscopediffusion   ;\
    split-window     ssh sysop@geoscopemeta        ;\
    split-window     ssh sysop@geoscopepqlx9       ;\
    split-window -fh ssh sysop@geoscopersync       ;\
    split-window     ssh sysop@geoscopeseiscomp4   ;\
    split-window     ssh sysop@geoscopeseiscomp6   ;\
    split-window     ssh sysop@geoscopevalidation  ;\
    split-window -fh ssh sysop@geoscopevalidation2 ;\
    split-window     ssh sysop@geoscopevpn         ;\
    split-window     ssh sysop@geoscopelognes      ;\
    select-layout tiled ;\
    '

set -s command-alias[107] sshcumulus='\
    new-window       ssh -p 222 root@geoscopert.dyndns.org ;\
    split-window     ssh -p 223 root@geoscopert.dyndns.org ;\
    select-layout tiled ;\
    select-pane -t 1 ;\
    '

# M="FOMA-20-1 ROCAM-11-1 SANVU-29-1 SOK-31-1 SSB-12-1 UNM-17-1"
set -s command-alias[108] sshSTA='\
    new-window       ssh root@FOMA-20-1   -t bash ; \
    split-window     ssh root@ROCAM-11-1  -t bash ; \
    split-window     ssh root@SANVU-29-1  -t bash ; \
    split-window     ssh root@SOK-31-1    -t bash ; \
    split-window -fh ssh root@SSB-12-1    -t bash ; \
    split-window     ssh root@UNM-17-1    -t bash ; \
    select-layout tiled ; \
    '

# M="smv-vh1 smv-vh2 smv-vh3 beluga narval bigfish smv-pbs smv-munin"
# set -s command-alias[200] sshsmv='\
#     new-window       ssh root@smv-vh1   -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@smv-vh2   -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@smv-vh3   -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@beluga    -t "bash --rcfile .bashrc.czo" ;\
#     split-window -fh ssh root@narval    -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@bigfish   -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@smv-pbs   -t "bash --rcfile .bashrc.czo" ;\
#     split-window     ssh root@smv-munin -t "bash --rcfile .bashrc.czo" ;\
#     select-layout tiled ;\
#     '

##====================================================================##
## TMUX version 3.3a
#
#  The default command key bindings are:
#
#           C-b         Send the prefix key (C-b) through to the application.
#           C-o         Rotate the panes in the current window forwards.
#           C-z         Suspend the tmux client.
#           !           Break the current pane out of the window.
#           "           Split the current pane into two, top and bottom.
#           #           List all paste buffers.
#           $           Rename the current session.
#           %           Split the current pane into two, left and right.
#           &           Kill the current window.
#           '           Prompt for a window index to select.
#           (           Switch the attached client to the previous session.
#           )           Switch the attached client to the next session.
#           ,           Rename the current window.
#           -           Delete the most recently copied buffer of text.
#           .           Prompt for an index to move the current window.
#           0 to 9      Select windows 0 to 9.
#           :           Enter the tmux command prompt.
#           ;           Move to the previously active pane.
#           =           Choose which buffer to paste interactively from a list.
#           ?           List all key bindings.
#           D           Choose a client to detach.
#           L           Switch the attached client back to the last session.
#           [           Enter copy mode to copy text or view the history.
#           ]           Paste the most recently copied buffer of text.
#           c           Create a new window.
#           d           Detach the current client.
#           f           Prompt to search for text in open windows.
#           i           Display some information about the current window.
#           l           Move to the previously selected window.
#           m           Mark the current pane (see select-pane -m).
#           M           Clear the marked pane.
#           n           Change to the next window.
#           o           Select the next pane in the current window.
#           p           Change to the previous window.
#           q           Briefly display pane indexes.
#           r           Force redraw of the attached client.
#           s           Select a new session for the attached client interactively.
#           t           Show the time.
#           w           Choose the current window interactively.
#           x           Kill the current pane.
#           z           Toggle zoom state of the current pane.
#           {           Swap the current pane with the previous pane.
#           }           Swap the current pane with the next pane.
#           ~           Show previous messages from tmux, if any.
#           Page Up     Enter copy mode and scroll one page up.
#           Up, Down
#           Left, Right
#                       Change to the pane above, below, to the left, or to the right of the current pane.
#           M-1 to M-5  Arrange panes in one of the five preset layouts: even-horizontal, even-vertical, main-horizontal, main-vertical, or
#                       tiled.
#           Space       Arrange the current window in the next preset layout.
#           M-n         Move to the next window with a bell or activity marker.
#           M-o         Rotate the panes in the current window backwards.
#           M-p         Move to the previous window with a bell or activity marker.
#           C-Up, C-Down
#           C-Left, C-Right
#                       Resize the current pane in steps of one cell.
#           M-Up, M-Down
#           M-Left, M-Right
#                       Resize the current pane in steps of five cells.
#
